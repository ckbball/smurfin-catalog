syntax = "proto3";

package catalogv1;

//import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
  info: {
    title: "Catalog service";
    version: "1.0";
    contact: {
      name: "catalog service";
      url: "https://github.com/ckbball/smurfin-catalog";
      email: "blah@happy.org";
    };
  };
  schemes: HTTP;
  consumes: "application/json";
  produces: "application/json";
  responses: {
    key: "404";
    value: {
      description: "Returned when resource doesn't exist";
      schema: {
        json_schema: {
          type: STRING;
        }
      }
    }
  }
};

service CatalogService {
  rpc FindItems(Specification) returns (Response) {
    option (google.api.http) = {
      post: "/v1/catalogs/search"
      body: "*"
    };
  }

  rpc Create(CreateRequest) returns (CreateResponse) {
    option (google.api.http) = {
      post: "/v1/catalogs"
      body: "*"
    };
  }
  rpc RemoveItem(RemoveRequest) returns (RemoveResponse) {
    option (google.api.http) = {
      delete: "/v1/catalogs/{id}"
    };
  }
  rpc ListItems(ListRequest) returns (ListResponse) {
    option (google.api.http) = {
      post: "/v1/catalogs/"
      body: "*"
    };
  }
  // maybe add update and read a single item
}

message Item {
  string id = 1;
  string vendor_id = 2;
  repeated string champions = 3;
  int32 blue_essence = 4;
  int32 riot_points = 5;
  int32 solo = 6;
  int32 flex = 7;
  int32 price_dollars = 8;
  int32 price_cents = 9;
  int32 level = 10;
  string email = 11;
  string password = 12;
  string login = 13;
  string login_password = 14;
}

message CreateRequest {
  string api = 1;
  Item item = 2;
}

message CreateResponse {
  string api = 1;
  int64 id = 2;
}

message RemoveRequest {
  string api = 1;
  int64 id = 2;
}
message RemoveResponse {
  string api = 1;
  int64 deleted = 2;
}

message Specification {
  int32 solo = 1;
  int32 flex = 2;
  int32 price_dollars = 3;
  int32 price_cents = 4;
  string item_id = 5;
  string vendor_id = 6;
  int32 page_num = 7;
  Item item = 8;
  string api = 9;
}

message Response {
  string api = 1;
  repeated Item items = 2;
}

message ListRequest {
  string api = 1;
  int64 page = 2;
  int64 limit = 3;
}

message ListResponse {
  string api = 1;
  repeated Item items = 2;
}